{"version":3,"sources":["assets\\Script\\PauseManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import AudioManager from \"./AudioManager\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PauseManager extends cc.Component {\n    @property(cc.Node)\n    pauseMenu: cc.Node = null;\n\n    @property(cc.Node)\n    pauseButton: cc.Node = null;\n\n    @property(cc.Node)\n    volumeUpButton: cc.Node = null;\n\n    @property(cc.Node)\n    volumeDownButton: cc.Node = null;\n\n    @property(cc.Label)\n    volumeLabel: cc.Label = null;\n\n    private isPaused: boolean = false;\n    private audioManager: AudioManager = null;\n\n    start() {\n        // Initialize pause menu\n        if (this.pauseMenu) {\n            this.pauseMenu.active = false;\n        }\n\n        // Update volume label\n        this.updateVolumeLabel();\n\n        // Register pause button event\n        if (this.pauseButton) {\n            this.pauseButton.on(cc.Node.EventType.TOUCH_END, () => {\n                this.togglePause();\n            }, this);\n        }\n\n        // Register volume control events\n        if (this.volumeUpButton) {\n            this.volumeUpButton.on(cc.Node.EventType.TOUCH_END, this.increaseVolume, this);\n        }\n        if (this.volumeDownButton) {\n            this.volumeDownButton.on(cc.Node.EventType.TOUCH_END, this.decreaseVolume, this);\n        }\n\n        // Register resume button event\n        const resumeButton = cc.find(\"Canvas/PauseMenu/ResumeButton\");\n        if (resumeButton) {\n            resumeButton.on(cc.Node.EventType.TOUCH_END, () => {\n                this.togglePause();\n            }, this);\n        }\n\n        // Register quit button event\n        const quitButton = cc.find(\"Canvas/PauseMenu/QuitButton\");\n        if (quitButton) {\n            quitButton.on(cc.Node.EventType.TOUCH_END, () => {\n                this.quitToMenu();\n            }, this);\n        }\n    }\n\n    togglePause() {\n        this.isPaused = !this.isPaused;\n        \n        if (this.pauseMenu) {\n            this.pauseMenu.active = this.isPaused;\n        }\n\n        if (this.isPaused) {\n            cc.director.pause();\n        } else {\n            cc.director.resume();\n        }\n    }\n\n    quitToMenu() {\n        cc.director.resume();\n        const transition = cc.find(\"Canvas/Transition\");\n        if (transition) {\n            transition.getComponent(\"TransitionManager\").playTransOutAndChangeScene(\"Scene000_StartScene\");\n        } else {\n            cc.director.loadScene(\"Scene000_StartScene\");\n        }\n    }\n\n    increaseVolume() {\n        let newVolume = Math.min(1.0, cc.audioEngine.getVolume(AudioManager.audioId) + 0.1);\n        cc.audioEngine.setVolume(AudioManager.audioId, newVolume);\n        this.updateVolumeLabel();\n    }\n\n    decreaseVolume() {\n        let newVolume = Math.max(0.0, cc.audioEngine.getVolume(AudioManager.audioId) - 0.1);\n        cc.audioEngine.setVolume(AudioManager.audioId, newVolume);\n        this.updateVolumeLabel();\n    }\n\n    updateVolumeLabel() {\n        const volume10 = Math.round(cc.audioEngine.getVolume(AudioManager.audioId) * 10);\n        this.volumeLabel.string = ` ${volume10} `;\n    }\n\n    onDestroy() {\n        // Clean up event listeners\n        if (this.pauseButton) {\n            this.pauseButton.off(cc.Node.EventType.TOUCH_END);\n        }\n\n        if (this.volumeUpButton) {\n            this.volumeUpButton.off(cc.Node.EventType.TOUCH_END);\n        }\n\n        if (this.volumeDownButton) {\n            this.volumeDownButton.off(cc.Node.EventType.TOUCH_END);\n        }\n\n        const resumeButton = cc.find(\"Canvas/PauseMenu/ResumeButton\");\n        if (resumeButton) {\n            resumeButton.off(cc.Node.EventType.TOUCH_END);\n        }\n\n        const quitButton = cc.find(\"Canvas/PauseMenu/QuitButton\");\n        if (quitButton) {\n            quitButton.off(cc.Node.EventType.TOUCH_END);\n        }\n    }\n\n    update() {\n        const camera = cc.find(\"Canvas/Main Camera\");\n        if (camera) {\n            // Add offset relative to camera position using Vec3\n            this.node.position = camera.position.add(cc.v3(668, 362, 0));\n            if (this.pauseMenu) {\n                this.pauseMenu.position = camera.position.add(cc.v3(0, 0, 0));\n            }\n        }\n    }\n}"]}