{"version":3,"sources":["assets\\Script\\VideoPlayerController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class VideoPlayerController extends cc.Component {\r\n    @property(cc.VideoPlayer)\r\n    videoPlayer: cc.VideoPlayer = null;\r\n\r\n    private hasPlayed: boolean = false;\r\n    private fadeMask: cc.Node = null;\r\n\r\n    onLoad() {\r\n        cc.log(\"VideoPlayerController onLoad\");\r\n        if (!this.videoPlayer) {\r\n            this.videoPlayer = this.getComponent(cc.VideoPlayer);\r\n            cc.log(\"VideoPlayer component found:\", this.videoPlayer ? \"yes\" : \"no\");\r\n        }\r\n\r\n        if (this.videoPlayer) {\r\n            this.setupVideoPlayerEvents();\r\n            // 確保視頻設置正確\r\n            this.videoPlayer.keepAspectRatio = true;\r\n            this.videoPlayer.isFullscreen = false;\r\n            this.videoPlayer.stayOnBottom = false;\r\n            cc.log(\"VideoPlayer setup completed\");\r\n        }\r\n\r\n        // 創建淡出遮罩\r\n        this.createFadeMask();\r\n    }\r\n\r\n    private createFadeMask() {\r\n        // 創建遮罩節點\r\n        this.fadeMask = new cc.Node('FadeMask');\r\n        \r\n        // 設置父節點為當前節點\r\n        this.fadeMask.parent = this.node;\r\n        \r\n        // 添加 Sprite 組件\r\n        const sprite = this.fadeMask.addComponent(cc.Sprite);\r\n        \r\n        // 創建純黑色圖片\r\n        const texture = new cc.Texture2D();\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 2;\r\n        canvas.height = 2;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#000000';\r\n        ctx.fillRect(0, 0, 2, 2);\r\n        texture.initWithElement(canvas);\r\n        \r\n        // 設置 Sprite 的圖片\r\n        const spriteFrame = new cc.SpriteFrame(texture);\r\n        sprite.spriteFrame = spriteFrame;\r\n        \r\n        // 設置遮罩大小為全屏\r\n        const visibleSize = cc.view.getVisibleSize();\r\n        this.fadeMask.width = visibleSize.width;\r\n        this.fadeMask.height = visibleSize.height;\r\n        \r\n        // 設置遮罩位置為中心\r\n        this.fadeMask.x = 0;\r\n        this.fadeMask.y = 0;\r\n        \r\n        // 設置初始透明度為 0\r\n        this.fadeMask.opacity = 0;\r\n        \r\n        // 確保遮罩在最上層\r\n        this.fadeMask.zIndex = 999;\r\n    }\r\n\r\n    start() {\r\n        cc.log(\"VideoPlayerController start\");\r\n        if (this.videoPlayer) {\r\n            cc.log(\"Video resource type:\", this.videoPlayer.resourceType);\r\n            cc.log(\"Video clip:\", this.videoPlayer.clip ? \"set\" : \"not set\");\r\n            cc.log(\"Video remote URL:\", this.videoPlayer.remoteURL);\r\n            cc.log(\"Video player state:\", this.videoPlayer.currentTime);\r\n        }\r\n    }\r\n\r\n    private setupVideoPlayerEvents() {\r\n        cc.log(\"Setting up video player events\");\r\n        const eventHandler = new cc.Component.EventHandler();\r\n        eventHandler.target = this.node;\r\n        eventHandler.component = \"VideoPlayerController\";\r\n        eventHandler.handler = \"onVideoPlayerEvent\";\r\n        eventHandler.customEventData = \"video_event\";\r\n\r\n        this.videoPlayer.videoPlayerEvent = [eventHandler];\r\n        cc.log(\"Video player events setup completed\");\r\n    }\r\n\r\n    private fadeOutAndLoadScene() {\r\n        if (this.fadeMask) {\r\n            // 創建淡出動畫\r\n            const fadeAction = cc.fadeTo(1.0, 255);\r\n            const callback = cc.callFunc(() => {\r\n                this.loadStartScene();\r\n            });\r\n            \r\n            // 執行淡出動畫\r\n            this.fadeMask.runAction(cc.sequence(fadeAction, callback));\r\n        } else {\r\n            // 如果沒有遮罩，直接切換場景\r\n            this.loadStartScene();\r\n        }\r\n    }\r\n\r\n    private loadStartScene() {\r\n        cc.director.loadScene(\"StartScene\", (err, scene) => {\r\n            if (err) {\r\n                cc.error(\"Failed to load StartScene:\", err);\r\n                return;\r\n            }\r\n            cc.log(\"StartScene loaded successfully\");\r\n        });\r\n    }\r\n\r\n    onVideoPlayerEvent(videoPlayer: cc.VideoPlayer, eventType: cc.VideoPlayer.EventType, customEventData: string) {\r\n        cc.log(\"Video event received:\", eventType);\r\n        switch (eventType) {\r\n            case cc.VideoPlayer.EventType.PLAYING:\r\n                cc.log(\"Video is playing\");\r\n                cc.log(\"Current time:\", this.videoPlayer.currentTime);\r\n                break;\r\n            case cc.VideoPlayer.EventType.PAUSED:\r\n                cc.log(\"Video is paused\");\r\n                cc.log(\"Current time:\", this.videoPlayer.currentTime);\r\n                break;\r\n            case cc.VideoPlayer.EventType.STOPPED:\r\n                cc.log(\"Video is stopped\");\r\n                cc.log(\"Current time:\", this.videoPlayer.currentTime);\r\n                break;\r\n            case cc.VideoPlayer.EventType.COMPLETED:\r\n                cc.log(\"Video playback completed\");\r\n                this.fadeOutAndLoadScene();\r\n                break;\r\n            case cc.VideoPlayer.EventType.META_LOADED:\r\n                cc.log(\"Video metadata loaded\");\r\n                break;\r\n            case cc.VideoPlayer.EventType.CLICKED:\r\n                cc.log(\"Video player clicked\");\r\n                if (!this.hasPlayed) {\r\n                    cc.log(\"First click, starting video playback\");\r\n                    this.videoPlayer.play();\r\n                    this.hasPlayed = true;\r\n                } else {\r\n                    cc.log(\"Video has already been played once\");\r\n                }\r\n                break;\r\n            case cc.VideoPlayer.EventType.READY_TO_PLAY:\r\n                cc.log(\"Video is ready to play\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        cc.log(\"VideoPlayerController onDestroy\");\r\n        // Clean up event handlers\r\n        if (this.videoPlayer) {\r\n            this.videoPlayer.videoPlayerEvent = [];\r\n        }\r\n    }\r\n} "]}