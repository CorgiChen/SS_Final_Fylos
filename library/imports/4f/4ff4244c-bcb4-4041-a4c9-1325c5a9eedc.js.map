{"version":3,"sources":["assets\\Script\\VideoPlayerController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAmD,yCAAY;IAA/D;QAAA,qEA+GC;QA7GG,iBAAW,GAAmB,IAAI,CAAC;QAKnC,cAAQ,GAAY,KAAK,CAAC;QAG1B,eAAS,GAAW,qBAAqB,CAAC;QAElC,eAAS,GAAY,KAAK,CAAC;;IAmGvC,CAAC;IAjGG,sCAAM,GAAN;QACI,EAAE,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;YACrD,EAAE,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC3E;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,WAAW;YACX,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;YACtC,EAAE,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;SACzC;IACL,CAAC;IAED,qCAAK,GAAL;QACI,EAAE,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QACtC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAC9D,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACjE,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YACxD,EAAE,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAC/D;IACL,CAAC;IAEO,sDAAsB,GAA9B;QACI,EAAE,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QACzC,IAAM,YAAY,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACrD,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,YAAY,CAAC,SAAS,GAAG,uBAAuB,CAAC;QACjD,YAAY,CAAC,OAAO,GAAG,oBAAoB,CAAC;QAC5C,YAAY,CAAC,eAAe,GAAG,aAAa,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,CAAC,YAAY,CAAC,CAAC;QACnD,EAAE,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAClD,CAAC;IAEO,yCAAS,GAAjB;QACI,IAAM,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChD,IAAI,UAAU,EAAE;YACZ,UAAU,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3F;aAAM;YACH,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACzC;IACL,CAAC;IAED,kDAAkB,GAAlB,UAAmB,WAA2B,EAAE,SAAmC,EAAE,eAAuB;QACxG,EAAE,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;QAC3C,QAAQ,SAAS,EAAE;YACf,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO;gBACjC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAC3B,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACtD,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM;gBAChC,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC1B,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACtD,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO;gBACjC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAC3B,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACtD,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS;gBACnC,EAAE,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACnC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW;gBACrC,EAAE,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBAChC,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO;gBACjC,EAAE,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,EAAE,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;oBAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;oBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACzB;qBAAM;oBACH,EAAE,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;iBAChD;gBACD,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa;gBACvC,EAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;gBACjC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBAClC,EAAE,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;oBACpD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;oBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACzB;gBACD,MAAM;SACb;IACL,CAAC;IAED,yCAAS,GAAT;QACI,EAAE,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC1C;IACL,CAAC;IA5GD;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;8DACU;IAKnC;QAHC,QAAQ,CAAC;YACN,OAAO,EAAE,UAAU;SACtB,CAAC;2DACwB;IAG1B;QADC,QAAQ;4DACiC;IAVzB,qBAAqB;QADzC,OAAO;OACa,qBAAqB,CA+GzC;IAAD,4BAAC;CA/GD,AA+GC,CA/GkD,EAAE,CAAC,SAAS,GA+G9D;kBA/GoB,qBAAqB","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class VideoPlayerController extends cc.Component {\r\n    @property(cc.VideoPlayer)\r\n    videoPlayer: cc.VideoPlayer = null;\r\n\r\n    @property({\r\n        tooltip: \"是否自動播放視頻\"\r\n    })\r\n    autoPlay: boolean = false;\r\n\r\n    @property\r\n    nextScene: string = \"Scene000_StartScene\";\r\n\r\n    private hasPlayed: boolean = false;\r\n\r\n    onLoad() {\r\n        cc.log(\"VideoPlayerController onLoad\");\r\n        if (!this.videoPlayer) {\r\n            this.videoPlayer = this.getComponent(cc.VideoPlayer);\r\n            cc.log(\"VideoPlayer component found:\", this.videoPlayer ? \"yes\" : \"no\");\r\n        }\r\n\r\n        if (this.videoPlayer) {\r\n            this.setupVideoPlayerEvents();\r\n            // 確保視頻設置正確\r\n            this.videoPlayer.keepAspectRatio = true;\r\n            this.videoPlayer.isFullscreen = false;\r\n            this.videoPlayer.stayOnBottom = false;\r\n            cc.log(\"VideoPlayer setup completed\");\r\n        }\r\n    }\r\n\r\n    start() {\r\n        cc.log(\"VideoPlayerController start\");\r\n        if (this.videoPlayer) {\r\n            cc.log(\"Video resource type:\", this.videoPlayer.resourceType);\r\n            cc.log(\"Video clip:\", this.videoPlayer.clip ? \"set\" : \"not set\");\r\n            cc.log(\"Video remote URL:\", this.videoPlayer.remoteURL);\r\n            cc.log(\"Video player state:\", this.videoPlayer.currentTime);\r\n        }\r\n    }\r\n\r\n    private setupVideoPlayerEvents() {\r\n        cc.log(\"Setting up video player events\");\r\n        const eventHandler = new cc.Component.EventHandler();\r\n        eventHandler.target = this.node;\r\n        eventHandler.component = \"VideoPlayerController\";\r\n        eventHandler.handler = \"onVideoPlayerEvent\";\r\n        eventHandler.customEventData = \"video_event\";\r\n\r\n        this.videoPlayer.videoPlayerEvent = [eventHandler];\r\n        cc.log(\"Video player events setup completed\");\r\n    }\r\n\r\n    private loadScene() {\r\n        const transition = cc.find(\"Canvas/Transition\");\r\n        if (transition) {\r\n            transition.getComponent(\"TransitionManager\").playTransOutAndChangeScene(this.nextScene);\r\n        } else {\r\n            cc.director.loadScene(this.nextScene);\r\n        }\r\n    }\r\n\r\n    onVideoPlayerEvent(videoPlayer: cc.VideoPlayer, eventType: cc.VideoPlayer.EventType, customEventData: string) {\r\n        cc.log(\"Video event received:\", eventType);\r\n        switch (eventType) {\r\n            case cc.VideoPlayer.EventType.PLAYING:\r\n                cc.log(\"Video is playing\");\r\n                cc.log(\"Current time:\", this.videoPlayer.currentTime);\r\n                break;\r\n            case cc.VideoPlayer.EventType.PAUSED:\r\n                cc.log(\"Video is paused\");\r\n                cc.log(\"Current time:\", this.videoPlayer.currentTime);\r\n                break;\r\n            case cc.VideoPlayer.EventType.STOPPED:\r\n                cc.log(\"Video is stopped\");\r\n                cc.log(\"Current time:\", this.videoPlayer.currentTime);\r\n                break;\r\n            case cc.VideoPlayer.EventType.COMPLETED:\r\n                cc.log(\"Video playback completed\");\r\n                this.loadScene();\r\n                break;\r\n            case cc.VideoPlayer.EventType.META_LOADED:\r\n                cc.log(\"Video metadata loaded\");\r\n                break;\r\n            case cc.VideoPlayer.EventType.CLICKED:\r\n                cc.log(\"Video player clicked\");\r\n                if (!this.hasPlayed) {\r\n                    cc.log(\"First click, starting video playback\");\r\n                    this.videoPlayer.play();\r\n                    this.hasPlayed = true;\r\n                } else {\r\n                    cc.log(\"Video has already been played once\");\r\n                }\r\n                break;\r\n            case cc.VideoPlayer.EventType.READY_TO_PLAY:\r\n                cc.log(\"Video is ready to play\");\r\n                if (this.autoPlay && !this.hasPlayed) {\r\n                    cc.log(\"AutoPlay enabled, starting video playback\");\r\n                    this.videoPlayer.play();\r\n                    this.hasPlayed = true;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        cc.log(\"VideoPlayerController onDestroy\");\r\n        if (this.videoPlayer) {\r\n            this.videoPlayer.videoPlayerEvent = [];\r\n        }\r\n    }\r\n} "]}