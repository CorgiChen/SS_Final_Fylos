{"version":3,"sources":["assets\\Script\\Camera.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAyCC;QAxCG,+BAA+B;QAC/B,YAAM,GAAY,IAAI,CAAC;;IAuC3B,CAAC;IArCG,kDAAkD;IAClD,yBAAM,GAAN;QACI,oCAAoC;QACpC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,4DAA4D;IAC5D,yBAAM,GAAN,UAAO,EAAE;QACL,8CAA8C;QAC9C,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC1C,gEAAgE;QAChE,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAClC,SAAS,CAAC,CAAC,IAAI,GAAG,CAAC;QACnB,SAAS,CAAC,CAAC,IAAI,GAAG,CAAC;QAEnB,kCAAkC;QAClC,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACxC,+DAA+D;QAC/D,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;QAE1C,2FAA2F;QAC3F,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAE1D,mDAAmD;QACnD,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB;aAAM,IAAI,SAAS,CAAC,CAAC,GAAG,IAAI,EAAE;YAC3B,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;YACjB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB;aAAM,IAAI,SAAS,CAAC,CAAC,GAAG,IAAI,EAAE;YAC3B,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC;SACtB;QACD,gCAAgC;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAxCgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAyC5B;IAAD,eAAC;CAzCD,AAyCC,CAzCqC,EAAE,CAAC,SAAS,GAyCjD;kBAzCoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    // Reference to the player node\r\n    player: cc.Node = null;\r\n\r\n    // Called when the script instance is being loaded\r\n    onLoad() {\r\n        // Find the player node in the scene\r\n        this.player = cc.find(\"Player\");\r\n    }\r\n\r\n    // Called every frame, dt is the delta time since last frame\r\n    update(dt) {\r\n        // Get the target position (player's position)\r\n        let playerPos = this.player.getPosition();\r\n        // Offset the camera to the left by 100 units (adjust as needed)\r\n        let targetPos = playerPos.clone();\r\n        targetPos.x -= 400;\r\n        targetPos.y -= 400;\r\n\r\n        // Get the current camera position\r\n        let cameraPos = this.node.getPosition();\r\n        // Smoothly interpolate camera position towards target position\r\n        cameraPos.lerp(targetPos, 0.1, cameraPos);\r\n\r\n        // Smoothly interpolate camera's y position towards target y (for softer vertical movement)\r\n        cameraPos.y = cc.misc.lerp(cameraPos.y, targetPos.y, 0.5);\r\n\r\n        // Clamp the camera's x position between 0 and 8000\r\n        if (cameraPos.x < 0) {\r\n            cameraPos.x = 0;\r\n        } else if (cameraPos.x > 3072) {\r\n            cameraPos.x = 3072;\r\n        }\r\n        if (cameraPos.y < 0) {\r\n            cameraPos.y = 0;\r\n        } else if (cameraPos.y > 2500) {\r\n            cameraPos.y = 2500;\r\n        }\r\n        // Set the camera's new position\r\n        this.node.setPosition(cameraPos);\r\n    }\r\n}"]}