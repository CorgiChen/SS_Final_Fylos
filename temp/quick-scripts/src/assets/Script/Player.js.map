{"version":3,"sources":["assets\\Script\\Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PlayerController extends cc.Component {\r\n    @property\r\n    moveSpeed: number = 300;\r\n\r\n    @property\r\n    jumpForce: number = 700;\r\n\r\n    @property\r\n    gravity: number = 1500;\r\n\r\n    @property\r\n    maxFallSpeed: number = 1000;\r\n\r\n    private moveDirection: number = 0;\r\n    private onGround: boolean = false;\r\n    private isJumping: boolean = false;\r\n    private isFalling: boolean = false;\r\n    private anim: cc.Animation = null;\r\n    private verticalVelocity: number = 0;\r\n    private horizontalVelocity: number = 0;\r\n    private rigidbody: cc.RigidBody = null;\r\n    private collider: cc.PhysicsBoxCollider = null;\r\n    private currentAnimation: string = \"idle\";\r\n    private groundCheckDistance: number = 20;\r\n    private lastGroundContact: cc.Vec2 = null;\r\n    private lastY: number = 0;\r\n\r\n    onLoad() {\r\n        // 初始化物理系統\r\n        const manager = cc.director.getPhysicsManager();\r\n        manager.enabled = true;\r\n        manager.gravity = cc.v2(0, -1500);\r\n        manager.debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit | \r\n                               cc.PhysicsManager.DrawBits.e_shapeBit;\r\n\r\n        // 獲取組件\r\n        this.anim = this.getComponent(cc.Animation);\r\n        if (this.anim) {\r\n            const clips = this.anim.getClips();\r\n            clips.forEach(clip => {\r\n                clip.wrapMode = cc.WrapMode.Loop;\r\n            });\r\n        }\r\n\r\n        // 初始化物理組件\r\n        this.rigidbody = this.getComponent(cc.RigidBody);\r\n        this.collider = this.getComponent(cc.PhysicsBoxCollider);\r\n\r\n        if (this.rigidbody) {\r\n            this.rigidbody.type = cc.RigidBodyType.Dynamic;\r\n            this.rigidbody.fixedRotation = true;\r\n            this.rigidbody.enabledContactListener = true;\r\n            this.rigidbody.gravityScale = 0;\r\n            this.rigidbody.linearDamping = 0;\r\n            this.rigidbody.allowSleep = false;\r\n        }\r\n\r\n        if (this.collider) {\r\n            this.collider.enabled = true;\r\n            this.collider.sensor = false;\r\n            this.collider.friction = 0.3;\r\n            this.collider.restitution = 0;\r\n            \r\n            // 調整碰撞箱大小\r\n            const size = this.node.getContentSize();\r\n            this.collider.size = cc.size(size.width * 0.8, size.height * 0.8);\r\n            this.collider.offset = cc.v2(0, -size.height * 0.1);\r\n        }\r\n\r\n        // 註冊鍵盤事件\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n\r\n        // 預設播放待機動畫\r\n        if (this.anim) {\r\n            this.anim.play(\"idle\");\r\n        }\r\n\r\n        this.lastY = this.node.y;\r\n    }\r\n\r\n    private playAnimation(animName: string) {\r\n        if (this.anim && this.currentAnimation !== animName) {\r\n            const state = this.anim.getAnimationState(animName);\r\n            if (state) {\r\n                state.wrapMode = cc.WrapMode.Loop;\r\n                state.speed = 1.0;\r\n                this.anim.play(animName);\r\n                this.currentAnimation = animName;\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDown(event: cc.Event.EventKeyboard) {\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.left:\r\n            case cc.macro.KEY.a:\r\n                this.moveDirection = -1;\r\n                this.horizontalVelocity = -this.moveSpeed;\r\n                if (!this.isJumping) {\r\n                    this.playAnimation(\"move\");\r\n                }\r\n                if (this.node.scaleX > 0) {\r\n                    this.node.scaleX *= -1;\r\n                }\r\n                break;\r\n            case cc.macro.KEY.right:\r\n            case cc.macro.KEY.d:\r\n                this.moveDirection = 1;\r\n                this.horizontalVelocity = this.moveSpeed;\r\n                if (!this.isJumping) {\r\n                    this.playAnimation(\"move\");\r\n                }\r\n                if (this.node.scaleX < 0) {\r\n                    this.node.scaleX *= -1;\r\n                }\r\n                break;\r\n            case cc.macro.KEY.up:\r\n            case cc.macro.KEY.space:\r\n                if (this.onGround) {\r\n                    this.jump();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    onKeyUp(event: cc.Event.EventKeyboard) {\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.left:\r\n            case cc.macro.KEY.a:\r\n                if (this.moveDirection < 0) {\r\n                    this.moveDirection = 0;\r\n                    this.horizontalVelocity = 0;\r\n                    if (!this.isJumping) {\r\n                        this.playAnimation(\"idle\");\r\n                    }\r\n                }\r\n                break;\r\n            case cc.macro.KEY.right:\r\n            case cc.macro.KEY.d:\r\n                if (this.moveDirection > 0) {\r\n                    this.moveDirection = 0;\r\n                    this.horizontalVelocity = 0;\r\n                    if (!this.isJumping) {\r\n                        this.playAnimation(\"idle\");\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    jump() {\r\n        this.onGround = false;\r\n        this.isJumping = true;\r\n        this.isFalling = false;\r\n        this.verticalVelocity = this.jumpForce;\r\n        this.playAnimation(\"jump\");\r\n    }\r\n\r\n    onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider) {\r\n        if (otherCollider.node.name === 'Ground') {\r\n            const normal = contact.getWorldManifold().normal;\r\n            const point = contact.getWorldManifold().points[0];\r\n            \r\n            // 只要有向下的分量就視為可以站在地面上\r\n            if (normal.y < 0) {\r\n                this.onGround = true;\r\n                this.isJumping = false;\r\n                this.isFalling = false;\r\n                this.verticalVelocity = 0;\r\n                this.lastGroundContact = point;\r\n                \r\n                if (this.moveDirection !== 0) {\r\n                    this.playAnimation(\"move\");\r\n                } else {\r\n                    this.playAnimation(\"idle\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onEndContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider) {\r\n        if (otherCollider.node.name === 'Ground') {\r\n            const normal = contact.getWorldManifold().normal;\r\n            const point = contact.getWorldManifold().points[0];\r\n            \r\n            // 檢查是否離開地面\r\n            if (normal.y < 0) {\r\n                // 檢查是否真的離開了地面（而不是滑到邊緣）\r\n                if (this.lastGroundContact && \r\n                    Math.abs(point.x - this.lastGroundContact.x) > this.collider.size.width * 0.5) {\r\n                    this.onGround = false;\r\n                    if (this.verticalVelocity < 0) {\r\n                        this.isFalling = true;\r\n                        this.playAnimation(\"fall\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        // 檢查是否在地面上\r\n        if (!this.onGround) {\r\n            // 使用多個射線檢測地面\r\n            const startPos = cc.v2(this.node.position.x, this.node.position.y);\r\n            const rayCount = 3; // 使用3條射線\r\n            const raySpacing = this.collider.size.width / (rayCount - 1);\r\n            \r\n            for (let i = 0; i < rayCount; i++) {\r\n                const rayX = startPos.x - this.collider.size.width/2 + i * raySpacing;\r\n                const rayStart = cc.v2(rayX, startPos.y);\r\n                const rayEnd = cc.v2(rayX, startPos.y - this.groundCheckDistance);\r\n                \r\n                const results = cc.director.getPhysicsManager().rayCast(rayStart, rayEnd, cc.RayCastType.All);\r\n                if (results.length > 0) {\r\n                    for (const result of results) {\r\n                        if (result.collider.node.name === 'Ground') {\r\n                            if (result.point.y < this.node.position.y) {\r\n                                this.onGround = true;\r\n                                this.isFalling = false;\r\n                                this.verticalVelocity = 0;\r\n                                this.lastGroundContact = result.point;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.onGround) break;\r\n            }\r\n        }\r\n\r\n        // 防止穿過地板\r\n        if (this.node.y < this.lastY && this.onGround) {\r\n            this.node.y = this.lastY;\r\n            this.verticalVelocity = 0;\r\n        }\r\n\r\n        if (!this.onGround) {\r\n            this.verticalVelocity -= this.gravity * dt;\r\n            if (this.verticalVelocity < -this.maxFallSpeed) {\r\n                this.verticalVelocity = -this.maxFallSpeed;\r\n            }\r\n            \r\n            if (this.verticalVelocity < 0 && !this.isFalling) {\r\n                this.isFalling = true;\r\n                this.isJumping = false;\r\n                this.playAnimation(\"fall\");\r\n            }\r\n        }\r\n\r\n        // 更新位置\r\n        let newX = this.node.x + this.horizontalVelocity * dt;\r\n        const newY = this.node.y + this.verticalVelocity * dt;\r\n        this.node.setPosition(newX, newY);\r\n\r\n        // 更新動畫\r\n        if (this.anim) {\r\n            if (this.isJumping) {\r\n                this.playAnimation(\"jump\");\r\n            } else if (this.isFalling) {\r\n                this.playAnimation(\"fall\");\r\n            } else if (this.moveDirection !== 0) {\r\n                this.playAnimation(\"move\");\r\n            } else {\r\n                this.playAnimation(\"idle\");\r\n            }\r\n        }\r\n\r\n        this.lastY = this.node.y;\r\n    }\r\n\r\n    onDestroy() {\r\n        // 移除鍵盤事件監聽\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n}\r\n"]}